<?php
// オブジェクトとは
// 簡単に言うと
// 関連する変数（値）と関数（動作）をまとめて、そのまとまりに名前を付けたもの

// オブジェクト指向とは
// 簡単に言うと
// 関連する変数や関数は1つのオブジェクト内で宣言してまとめてしまうことで、管理しやすくする
// ソースコードの見やすさや、複数のソースコードファイルがあるときの管理のしやすさを考えると、
// 関係のある変数や関数はまとめておく方が好ましく、それを実現できる仕組みとしてオブジェクトが用意されている。

// オブジェクト指向プログラミングとは
// オブジェクト指向プログラミングとは、積極的にオブジェクトという概念を導入したプログラミング手法ということ。

// オブジェクト指向プログラミング言語とは
// オブジェクト指向プログラミングを実現できるプログラミング言語。

// PHP
// クラスベースのオブジェクト指向プログラミング言語

// クラスベースとは
// 簡単に言うと
// クラスを定義し、それを元にインスタンスを生成するスタイル

// クラスとは
// オブジェクトの 金型（設計図）。
// オブジェクトを作るには、まずクラスを宣言する必要がある。
// どんな変数や関数を置くのかを決め、クラスの内部で宣言。
// すべての「関連する変数・関数」は、この時点で決定する。

// インスタンスとは
// オブジェクトの 実物（実体）。
// クラス（設計図）から生成される。
// 設計図だけあっても、設計図を基に作られた実物がなければ、関数などを利用することができない。

